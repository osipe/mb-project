/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.mb.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import com.mb.model.LichSuTaiKhoanDauKy;
import com.mb.model.LichSuTaiKhoanDauKyModel;
import com.mb.model.LichSuTaiKhoanDauKySoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the LichSuTaiKhoanDauKy service. Represents a row in the &quot;ketoan_lichsutaikhoandauky&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface </code>LichSuTaiKhoanDauKyModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link LichSuTaiKhoanDauKyImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see LichSuTaiKhoanDauKyImpl
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class LichSuTaiKhoanDauKyModelImpl
	extends BaseModelImpl<LichSuTaiKhoanDauKy>
	implements LichSuTaiKhoanDauKyModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a lich su tai khoan dau ky model instance should use the <code>LichSuTaiKhoanDauKy</code> interface instead.
	 */
	public static final String TABLE_NAME = "ketoan_lichsutaikhoandauky";

	public static final Object[][] TABLE_COLUMNS = {
		{"lichSuTaiKhoanDauKyId", Types.BIGINT}, {"companyId", Types.BIGINT},
		{"groupId", Types.BIGINT}, {"userId", Types.BIGINT},
		{"userName", Types.VARCHAR}, {"createDate", Types.TIMESTAMP},
		{"modifiedDate", Types.TIMESTAMP}, {"taiKhoanDoiUngId", Types.BIGINT},
		{"thang", Types.INTEGER}, {"nam", Types.INTEGER},
		{"soTienTon", Types.DOUBLE}, {"soTienThu", Types.DOUBLE},
		{"soTienChi", Types.DOUBLE}, {"hoatDong", Types.BOOLEAN}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("lichSuTaiKhoanDauKyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("taiKhoanDoiUngId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("thang", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("nam", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("soTienTon", Types.DOUBLE);
		TABLE_COLUMNS_MAP.put("soTienThu", Types.DOUBLE);
		TABLE_COLUMNS_MAP.put("soTienChi", Types.DOUBLE);
		TABLE_COLUMNS_MAP.put("hoatDong", Types.BOOLEAN);
	}

	public static final String TABLE_SQL_CREATE =
		"create table ketoan_lichsutaikhoandauky (lichSuTaiKhoanDauKyId LONG not null primary key,companyId LONG,groupId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,taiKhoanDoiUngId LONG,thang INTEGER,nam INTEGER,soTienTon DOUBLE,soTienThu DOUBLE,soTienChi DOUBLE,hoatDong BOOLEAN)";

	public static final String TABLE_SQL_DROP =
		"drop table ketoan_lichsutaikhoandauky";

	public static final String ORDER_BY_JPQL =
		" ORDER BY lichSuTaiKhoanDauKy.lichSuTaiKhoanDauKyId ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY ketoan_lichsutaikhoandauky.lichSuTaiKhoanDauKyId ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(
		com.mb.service.util.ServiceProps.get(
			"value.object.entity.cache.enabled.com.mb.model.LichSuTaiKhoanDauKy"),
		true);

	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(
		com.mb.service.util.ServiceProps.get(
			"value.object.finder.cache.enabled.com.mb.model.LichSuTaiKhoanDauKy"),
		true);

	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(
		com.mb.service.util.ServiceProps.get(
			"value.object.column.bitmask.enabled.com.mb.model.LichSuTaiKhoanDauKy"),
		true);

	public static final long NAM_COLUMN_BITMASK = 1L;

	public static final long TAIKHOANDOIUNGID_COLUMN_BITMASK = 2L;

	public static final long THANG_COLUMN_BITMASK = 4L;

	public static final long LICHSUTAIKHOANDAUKYID_COLUMN_BITMASK = 8L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static LichSuTaiKhoanDauKy toModel(
		LichSuTaiKhoanDauKySoap soapModel) {

		if (soapModel == null) {
			return null;
		}

		LichSuTaiKhoanDauKy model = new LichSuTaiKhoanDauKyImpl();

		model.setLichSuTaiKhoanDauKyId(soapModel.getLichSuTaiKhoanDauKyId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setGroupId(soapModel.getGroupId());
		model.setUserId(soapModel.getUserId());
		model.setUserName(soapModel.getUserName());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setTaiKhoanDoiUngId(soapModel.getTaiKhoanDoiUngId());
		model.setThang(soapModel.getThang());
		model.setNam(soapModel.getNam());
		model.setSoTienTon(soapModel.getSoTienTon());
		model.setSoTienThu(soapModel.getSoTienThu());
		model.setSoTienChi(soapModel.getSoTienChi());
		model.setHoatDong(soapModel.getHoatDong());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<LichSuTaiKhoanDauKy> toModels(
		LichSuTaiKhoanDauKySoap[] soapModels) {

		if (soapModels == null) {
			return null;
		}

		List<LichSuTaiKhoanDauKy> models = new ArrayList<LichSuTaiKhoanDauKy>(
			soapModels.length);

		for (LichSuTaiKhoanDauKySoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(
		com.mb.service.util.ServiceProps.get(
			"lock.expiration.time.com.mb.model.LichSuTaiKhoanDauKy"));

	public LichSuTaiKhoanDauKyModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _lichSuTaiKhoanDauKyId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setLichSuTaiKhoanDauKyId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _lichSuTaiKhoanDauKyId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return LichSuTaiKhoanDauKy.class;
	}

	@Override
	public String getModelClassName() {
		return LichSuTaiKhoanDauKy.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<LichSuTaiKhoanDauKy, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<LichSuTaiKhoanDauKy, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<LichSuTaiKhoanDauKy, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((LichSuTaiKhoanDauKy)this));
		}

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<LichSuTaiKhoanDauKy, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<LichSuTaiKhoanDauKy, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(LichSuTaiKhoanDauKy)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<LichSuTaiKhoanDauKy, Object>>
		getAttributeGetterFunctions() {

		return _attributeGetterFunctions;
	}

	public Map<String, BiConsumer<LichSuTaiKhoanDauKy, Object>>
		getAttributeSetterBiConsumers() {

		return _attributeSetterBiConsumers;
	}

	private static final Map<String, Function<LichSuTaiKhoanDauKy, Object>>
		_attributeGetterFunctions;
	private static final Map<String, BiConsumer<LichSuTaiKhoanDauKy, Object>>
		_attributeSetterBiConsumers;

	static {
		Map<String, Function<LichSuTaiKhoanDauKy, Object>>
			attributeGetterFunctions =
				new LinkedHashMap
					<String, Function<LichSuTaiKhoanDauKy, Object>>();
		Map<String, BiConsumer<LichSuTaiKhoanDauKy, ?>>
			attributeSetterBiConsumers =
				new LinkedHashMap<String, BiConsumer<LichSuTaiKhoanDauKy, ?>>();

		attributeGetterFunctions.put(
			"lichSuTaiKhoanDauKyId",
			new Function<LichSuTaiKhoanDauKy, Object>() {

				@Override
				public Object apply(LichSuTaiKhoanDauKy lichSuTaiKhoanDauKy) {
					return lichSuTaiKhoanDauKy.getLichSuTaiKhoanDauKyId();
				}

			});
		attributeSetterBiConsumers.put(
			"lichSuTaiKhoanDauKyId",
			new BiConsumer<LichSuTaiKhoanDauKy, Object>() {

				@Override
				public void accept(
					LichSuTaiKhoanDauKy lichSuTaiKhoanDauKy,
					Object lichSuTaiKhoanDauKyId) {

					lichSuTaiKhoanDauKy.setLichSuTaiKhoanDauKyId(
						(Long)lichSuTaiKhoanDauKyId);
				}

			});
		attributeGetterFunctions.put(
			"companyId",
			new Function<LichSuTaiKhoanDauKy, Object>() {

				@Override
				public Object apply(LichSuTaiKhoanDauKy lichSuTaiKhoanDauKy) {
					return lichSuTaiKhoanDauKy.getCompanyId();
				}

			});
		attributeSetterBiConsumers.put(
			"companyId",
			new BiConsumer<LichSuTaiKhoanDauKy, Object>() {

				@Override
				public void accept(
					LichSuTaiKhoanDauKy lichSuTaiKhoanDauKy, Object companyId) {

					lichSuTaiKhoanDauKy.setCompanyId((Long)companyId);
				}

			});
		attributeGetterFunctions.put(
			"groupId",
			new Function<LichSuTaiKhoanDauKy, Object>() {

				@Override
				public Object apply(LichSuTaiKhoanDauKy lichSuTaiKhoanDauKy) {
					return lichSuTaiKhoanDauKy.getGroupId();
				}

			});
		attributeSetterBiConsumers.put(
			"groupId",
			new BiConsumer<LichSuTaiKhoanDauKy, Object>() {

				@Override
				public void accept(
					LichSuTaiKhoanDauKy lichSuTaiKhoanDauKy, Object groupId) {

					lichSuTaiKhoanDauKy.setGroupId((Long)groupId);
				}

			});
		attributeGetterFunctions.put(
			"userId",
			new Function<LichSuTaiKhoanDauKy, Object>() {

				@Override
				public Object apply(LichSuTaiKhoanDauKy lichSuTaiKhoanDauKy) {
					return lichSuTaiKhoanDauKy.getUserId();
				}

			});
		attributeSetterBiConsumers.put(
			"userId",
			new BiConsumer<LichSuTaiKhoanDauKy, Object>() {

				@Override
				public void accept(
					LichSuTaiKhoanDauKy lichSuTaiKhoanDauKy, Object userId) {

					lichSuTaiKhoanDauKy.setUserId((Long)userId);
				}

			});
		attributeGetterFunctions.put(
			"userName",
			new Function<LichSuTaiKhoanDauKy, Object>() {

				@Override
				public Object apply(LichSuTaiKhoanDauKy lichSuTaiKhoanDauKy) {
					return lichSuTaiKhoanDauKy.getUserName();
				}

			});
		attributeSetterBiConsumers.put(
			"userName",
			new BiConsumer<LichSuTaiKhoanDauKy, Object>() {

				@Override
				public void accept(
					LichSuTaiKhoanDauKy lichSuTaiKhoanDauKy, Object userName) {

					lichSuTaiKhoanDauKy.setUserName((String)userName);
				}

			});
		attributeGetterFunctions.put(
			"createDate",
			new Function<LichSuTaiKhoanDauKy, Object>() {

				@Override
				public Object apply(LichSuTaiKhoanDauKy lichSuTaiKhoanDauKy) {
					return lichSuTaiKhoanDauKy.getCreateDate();
				}

			});
		attributeSetterBiConsumers.put(
			"createDate",
			new BiConsumer<LichSuTaiKhoanDauKy, Object>() {

				@Override
				public void accept(
					LichSuTaiKhoanDauKy lichSuTaiKhoanDauKy,
					Object createDate) {

					lichSuTaiKhoanDauKy.setCreateDate((Date)createDate);
				}

			});
		attributeGetterFunctions.put(
			"modifiedDate",
			new Function<LichSuTaiKhoanDauKy, Object>() {

				@Override
				public Object apply(LichSuTaiKhoanDauKy lichSuTaiKhoanDauKy) {
					return lichSuTaiKhoanDauKy.getModifiedDate();
				}

			});
		attributeSetterBiConsumers.put(
			"modifiedDate",
			new BiConsumer<LichSuTaiKhoanDauKy, Object>() {

				@Override
				public void accept(
					LichSuTaiKhoanDauKy lichSuTaiKhoanDauKy,
					Object modifiedDate) {

					lichSuTaiKhoanDauKy.setModifiedDate((Date)modifiedDate);
				}

			});
		attributeGetterFunctions.put(
			"taiKhoanDoiUngId",
			new Function<LichSuTaiKhoanDauKy, Object>() {

				@Override
				public Object apply(LichSuTaiKhoanDauKy lichSuTaiKhoanDauKy) {
					return lichSuTaiKhoanDauKy.getTaiKhoanDoiUngId();
				}

			});
		attributeSetterBiConsumers.put(
			"taiKhoanDoiUngId",
			new BiConsumer<LichSuTaiKhoanDauKy, Object>() {

				@Override
				public void accept(
					LichSuTaiKhoanDauKy lichSuTaiKhoanDauKy,
					Object taiKhoanDoiUngId) {

					lichSuTaiKhoanDauKy.setTaiKhoanDoiUngId(
						(Long)taiKhoanDoiUngId);
				}

			});
		attributeGetterFunctions.put(
			"thang",
			new Function<LichSuTaiKhoanDauKy, Object>() {

				@Override
				public Object apply(LichSuTaiKhoanDauKy lichSuTaiKhoanDauKy) {
					return lichSuTaiKhoanDauKy.getThang();
				}

			});
		attributeSetterBiConsumers.put(
			"thang",
			new BiConsumer<LichSuTaiKhoanDauKy, Object>() {

				@Override
				public void accept(
					LichSuTaiKhoanDauKy lichSuTaiKhoanDauKy, Object thang) {

					lichSuTaiKhoanDauKy.setThang((Integer)thang);
				}

			});
		attributeGetterFunctions.put(
			"nam",
			new Function<LichSuTaiKhoanDauKy, Object>() {

				@Override
				public Object apply(LichSuTaiKhoanDauKy lichSuTaiKhoanDauKy) {
					return lichSuTaiKhoanDauKy.getNam();
				}

			});
		attributeSetterBiConsumers.put(
			"nam",
			new BiConsumer<LichSuTaiKhoanDauKy, Object>() {

				@Override
				public void accept(
					LichSuTaiKhoanDauKy lichSuTaiKhoanDauKy, Object nam) {

					lichSuTaiKhoanDauKy.setNam((Integer)nam);
				}

			});
		attributeGetterFunctions.put(
			"soTienTon",
			new Function<LichSuTaiKhoanDauKy, Object>() {

				@Override
				public Object apply(LichSuTaiKhoanDauKy lichSuTaiKhoanDauKy) {
					return lichSuTaiKhoanDauKy.getSoTienTon();
				}

			});
		attributeSetterBiConsumers.put(
			"soTienTon",
			new BiConsumer<LichSuTaiKhoanDauKy, Object>() {

				@Override
				public void accept(
					LichSuTaiKhoanDauKy lichSuTaiKhoanDauKy, Object soTienTon) {

					lichSuTaiKhoanDauKy.setSoTienTon((Double)soTienTon);
				}

			});
		attributeGetterFunctions.put(
			"soTienThu",
			new Function<LichSuTaiKhoanDauKy, Object>() {

				@Override
				public Object apply(LichSuTaiKhoanDauKy lichSuTaiKhoanDauKy) {
					return lichSuTaiKhoanDauKy.getSoTienThu();
				}

			});
		attributeSetterBiConsumers.put(
			"soTienThu",
			new BiConsumer<LichSuTaiKhoanDauKy, Object>() {

				@Override
				public void accept(
					LichSuTaiKhoanDauKy lichSuTaiKhoanDauKy, Object soTienThu) {

					lichSuTaiKhoanDauKy.setSoTienThu((Double)soTienThu);
				}

			});
		attributeGetterFunctions.put(
			"soTienChi",
			new Function<LichSuTaiKhoanDauKy, Object>() {

				@Override
				public Object apply(LichSuTaiKhoanDauKy lichSuTaiKhoanDauKy) {
					return lichSuTaiKhoanDauKy.getSoTienChi();
				}

			});
		attributeSetterBiConsumers.put(
			"soTienChi",
			new BiConsumer<LichSuTaiKhoanDauKy, Object>() {

				@Override
				public void accept(
					LichSuTaiKhoanDauKy lichSuTaiKhoanDauKy, Object soTienChi) {

					lichSuTaiKhoanDauKy.setSoTienChi((Double)soTienChi);
				}

			});
		attributeGetterFunctions.put(
			"hoatDong",
			new Function<LichSuTaiKhoanDauKy, Object>() {

				@Override
				public Object apply(LichSuTaiKhoanDauKy lichSuTaiKhoanDauKy) {
					return lichSuTaiKhoanDauKy.getHoatDong();
				}

			});
		attributeSetterBiConsumers.put(
			"hoatDong",
			new BiConsumer<LichSuTaiKhoanDauKy, Object>() {

				@Override
				public void accept(
					LichSuTaiKhoanDauKy lichSuTaiKhoanDauKy, Object hoatDong) {

					lichSuTaiKhoanDauKy.setHoatDong((Boolean)hoatDong);
				}

			});

		_attributeGetterFunctions = Collections.unmodifiableMap(
			attributeGetterFunctions);
		_attributeSetterBiConsumers = Collections.unmodifiableMap(
			(Map)attributeSetterBiConsumers);
	}

	@JSON
	@Override
	public long getLichSuTaiKhoanDauKyId() {
		return _lichSuTaiKhoanDauKyId;
	}

	@Override
	public void setLichSuTaiKhoanDauKyId(long lichSuTaiKhoanDauKyId) {
		_columnBitmask = -1L;

		_lichSuTaiKhoanDauKyId = lichSuTaiKhoanDauKyId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException pe) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public long getTaiKhoanDoiUngId() {
		return _taiKhoanDoiUngId;
	}

	@Override
	public void setTaiKhoanDoiUngId(long taiKhoanDoiUngId) {
		_columnBitmask |= TAIKHOANDOIUNGID_COLUMN_BITMASK;

		if (!_setOriginalTaiKhoanDoiUngId) {
			_setOriginalTaiKhoanDoiUngId = true;

			_originalTaiKhoanDoiUngId = _taiKhoanDoiUngId;
		}

		_taiKhoanDoiUngId = taiKhoanDoiUngId;
	}

	public long getOriginalTaiKhoanDoiUngId() {
		return _originalTaiKhoanDoiUngId;
	}

	@JSON
	@Override
	public int getThang() {
		return _thang;
	}

	@Override
	public void setThang(int thang) {
		_columnBitmask |= THANG_COLUMN_BITMASK;

		if (!_setOriginalThang) {
			_setOriginalThang = true;

			_originalThang = _thang;
		}

		_thang = thang;
	}

	public int getOriginalThang() {
		return _originalThang;
	}

	@JSON
	@Override
	public int getNam() {
		return _nam;
	}

	@Override
	public void setNam(int nam) {
		_columnBitmask |= NAM_COLUMN_BITMASK;

		if (!_setOriginalNam) {
			_setOriginalNam = true;

			_originalNam = _nam;
		}

		_nam = nam;
	}

	public int getOriginalNam() {
		return _originalNam;
	}

	@JSON
	@Override
	public Double getSoTienTon() {
		return _soTienTon;
	}

	@Override
	public void setSoTienTon(Double soTienTon) {
		_soTienTon = soTienTon;
	}

	@JSON
	@Override
	public Double getSoTienThu() {
		return _soTienThu;
	}

	@Override
	public void setSoTienThu(Double soTienThu) {
		_soTienThu = soTienThu;
	}

	@JSON
	@Override
	public Double getSoTienChi() {
		return _soTienChi;
	}

	@Override
	public void setSoTienChi(Double soTienChi) {
		_soTienChi = soTienChi;
	}

	@JSON
	@Override
	public Boolean getHoatDong() {
		return _hoatDong;
	}

	@Override
	public void setHoatDong(Boolean hoatDong) {
		_hoatDong = hoatDong;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), LichSuTaiKhoanDauKy.class.getName(),
			getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public LichSuTaiKhoanDauKy toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (LichSuTaiKhoanDauKy)ProxyUtil.newProxyInstance(
				_classLoader, _escapedModelInterfaces,
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		LichSuTaiKhoanDauKyImpl lichSuTaiKhoanDauKyImpl =
			new LichSuTaiKhoanDauKyImpl();

		lichSuTaiKhoanDauKyImpl.setLichSuTaiKhoanDauKyId(
			getLichSuTaiKhoanDauKyId());
		lichSuTaiKhoanDauKyImpl.setCompanyId(getCompanyId());
		lichSuTaiKhoanDauKyImpl.setGroupId(getGroupId());
		lichSuTaiKhoanDauKyImpl.setUserId(getUserId());
		lichSuTaiKhoanDauKyImpl.setUserName(getUserName());
		lichSuTaiKhoanDauKyImpl.setCreateDate(getCreateDate());
		lichSuTaiKhoanDauKyImpl.setModifiedDate(getModifiedDate());
		lichSuTaiKhoanDauKyImpl.setTaiKhoanDoiUngId(getTaiKhoanDoiUngId());
		lichSuTaiKhoanDauKyImpl.setThang(getThang());
		lichSuTaiKhoanDauKyImpl.setNam(getNam());
		lichSuTaiKhoanDauKyImpl.setSoTienTon(getSoTienTon());
		lichSuTaiKhoanDauKyImpl.setSoTienThu(getSoTienThu());
		lichSuTaiKhoanDauKyImpl.setSoTienChi(getSoTienChi());
		lichSuTaiKhoanDauKyImpl.setHoatDong(getHoatDong());

		lichSuTaiKhoanDauKyImpl.resetOriginalValues();

		return lichSuTaiKhoanDauKyImpl;
	}

	@Override
	public int compareTo(LichSuTaiKhoanDauKy lichSuTaiKhoanDauKy) {
		int value = 0;

		if (getLichSuTaiKhoanDauKyId() <
				lichSuTaiKhoanDauKy.getLichSuTaiKhoanDauKyId()) {

			value = -1;
		}
		else if (getLichSuTaiKhoanDauKyId() >
					lichSuTaiKhoanDauKy.getLichSuTaiKhoanDauKyId()) {

			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof LichSuTaiKhoanDauKy)) {
			return false;
		}

		LichSuTaiKhoanDauKy lichSuTaiKhoanDauKy = (LichSuTaiKhoanDauKy)obj;

		long primaryKey = lichSuTaiKhoanDauKy.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		LichSuTaiKhoanDauKyModelImpl lichSuTaiKhoanDauKyModelImpl = this;

		lichSuTaiKhoanDauKyModelImpl._setModifiedDate = false;

		lichSuTaiKhoanDauKyModelImpl._originalTaiKhoanDoiUngId =
			lichSuTaiKhoanDauKyModelImpl._taiKhoanDoiUngId;

		lichSuTaiKhoanDauKyModelImpl._setOriginalTaiKhoanDoiUngId = false;

		lichSuTaiKhoanDauKyModelImpl._originalThang =
			lichSuTaiKhoanDauKyModelImpl._thang;

		lichSuTaiKhoanDauKyModelImpl._setOriginalThang = false;

		lichSuTaiKhoanDauKyModelImpl._originalNam =
			lichSuTaiKhoanDauKyModelImpl._nam;

		lichSuTaiKhoanDauKyModelImpl._setOriginalNam = false;

		lichSuTaiKhoanDauKyModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<LichSuTaiKhoanDauKy> toCacheModel() {
		LichSuTaiKhoanDauKyCacheModel lichSuTaiKhoanDauKyCacheModel =
			new LichSuTaiKhoanDauKyCacheModel();

		lichSuTaiKhoanDauKyCacheModel.lichSuTaiKhoanDauKyId =
			getLichSuTaiKhoanDauKyId();

		lichSuTaiKhoanDauKyCacheModel.companyId = getCompanyId();

		lichSuTaiKhoanDauKyCacheModel.groupId = getGroupId();

		lichSuTaiKhoanDauKyCacheModel.userId = getUserId();

		lichSuTaiKhoanDauKyCacheModel.userName = getUserName();

		String userName = lichSuTaiKhoanDauKyCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			lichSuTaiKhoanDauKyCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			lichSuTaiKhoanDauKyCacheModel.createDate = createDate.getTime();
		}
		else {
			lichSuTaiKhoanDauKyCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			lichSuTaiKhoanDauKyCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			lichSuTaiKhoanDauKyCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		lichSuTaiKhoanDauKyCacheModel.taiKhoanDoiUngId = getTaiKhoanDoiUngId();

		lichSuTaiKhoanDauKyCacheModel.thang = getThang();

		lichSuTaiKhoanDauKyCacheModel.nam = getNam();

		lichSuTaiKhoanDauKyCacheModel.soTienTon = getSoTienTon();

		lichSuTaiKhoanDauKyCacheModel.soTienThu = getSoTienThu();

		lichSuTaiKhoanDauKyCacheModel.soTienChi = getSoTienChi();

		lichSuTaiKhoanDauKyCacheModel.hoatDong = getHoatDong();

		return lichSuTaiKhoanDauKyCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<LichSuTaiKhoanDauKy, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			4 * attributeGetterFunctions.size() + 2);

		sb.append("{");

		for (Map.Entry<String, Function<LichSuTaiKhoanDauKy, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<LichSuTaiKhoanDauKy, Object> attributeGetterFunction =
				entry.getValue();

			sb.append(attributeName);
			sb.append("=");
			sb.append(attributeGetterFunction.apply((LichSuTaiKhoanDauKy)this));
			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		Map<String, Function<LichSuTaiKhoanDauKy, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			5 * attributeGetterFunctions.size() + 4);

		sb.append("<model><model-name>");
		sb.append(getModelClassName());
		sb.append("</model-name>");

		for (Map.Entry<String, Function<LichSuTaiKhoanDauKy, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<LichSuTaiKhoanDauKy, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("<column><column-name>");
			sb.append(attributeName);
			sb.append("</column-name><column-value><![CDATA[");
			sb.append(attributeGetterFunction.apply((LichSuTaiKhoanDauKy)this));
			sb.append("]]></column-value></column>");
		}

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader =
		LichSuTaiKhoanDauKy.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
		LichSuTaiKhoanDauKy.class, ModelWrapper.class
	};

	private long _lichSuTaiKhoanDauKyId;
	private long _companyId;
	private long _groupId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private long _taiKhoanDoiUngId;
	private long _originalTaiKhoanDoiUngId;
	private boolean _setOriginalTaiKhoanDoiUngId;
	private int _thang;
	private int _originalThang;
	private boolean _setOriginalThang;
	private int _nam;
	private int _originalNam;
	private boolean _setOriginalNam;
	private Double _soTienTon;
	private Double _soTienThu;
	private Double _soTienChi;
	private Boolean _hoatDong;
	private long _columnBitmask;
	private LichSuTaiKhoanDauKy _escapedModel;

}