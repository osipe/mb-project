/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.mb.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import com.mb.model.PhatVay;
import com.mb.model.PhatVayModel;
import com.mb.model.PhatVaySoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the PhatVay service. Represents a row in the &quot;mb_phatvay&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface </code>PhatVayModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link PhatVayImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see PhatVayImpl
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class PhatVayModelImpl
	extends BaseModelImpl<PhatVay> implements PhatVayModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a phat vay model instance should use the <code>PhatVay</code> interface instead.
	 */
	public static final String TABLE_NAME = "mb_phatvay";

	public static final Object[][] TABLE_COLUMNS = {
		{"phatVayId", Types.BIGINT}, {"companyId", Types.BIGINT},
		{"groupId", Types.BIGINT}, {"userId", Types.BIGINT},
		{"userName", Types.VARCHAR}, {"ngayTao", Types.TIMESTAMP},
		{"modifiedDate", Types.TIMESTAMP}, {"chiNhanhId", Types.BIGINT},
		{"maCTV", Types.VARCHAR}, {"maKhachHang", Types.VARCHAR},
		{"soKU", Types.VARCHAR}, {"createDate", Types.TIMESTAMP},
		{"ngayBatDau", Types.TIMESTAMP}, {"ngayKetThuc", Types.TIMESTAMP},
		{"loaiPhatVay", Types.INTEGER}, {"soLanDaThu", Types.INTEGER},
		{"ngayDaThuCuoi", Types.TIMESTAMP}, {"soTienVay", Types.DOUBLE},
		{"thoiHan", Types.INTEGER}, {"laiSuatVay", Types.DOUBLE},
		{"gocNgay", Types.DOUBLE}, {"laiNgay", Types.DOUBLE},
		{"gocNgayCuoi", Types.DOUBLE}, {"soNgayThuTruoc", Types.INTEGER},
		{"ngayThuTruocTu", Types.TIMESTAMP},
		{"ngayThuTruocDen", Types.TIMESTAMP}, {"ngayTatToan", Types.TIMESTAMP},
		{"trangThai", Types.INTEGER}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("phatVayId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ngayTao", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("chiNhanhId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("maCTV", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("maKhachHang", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("soKU", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("ngayBatDau", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("ngayKetThuc", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("loaiPhatVay", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("soLanDaThu", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("ngayDaThuCuoi", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("soTienVay", Types.DOUBLE);
		TABLE_COLUMNS_MAP.put("thoiHan", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("laiSuatVay", Types.DOUBLE);
		TABLE_COLUMNS_MAP.put("gocNgay", Types.DOUBLE);
		TABLE_COLUMNS_MAP.put("laiNgay", Types.DOUBLE);
		TABLE_COLUMNS_MAP.put("gocNgayCuoi", Types.DOUBLE);
		TABLE_COLUMNS_MAP.put("soNgayThuTruoc", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("ngayThuTruocTu", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("ngayThuTruocDen", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("ngayTatToan", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("trangThai", Types.INTEGER);
	}

	public static final String TABLE_SQL_CREATE =
		"create table mb_phatvay (phatVayId LONG not null primary key,companyId LONG,groupId LONG,userId LONG,userName VARCHAR(75) null,ngayTao DATE null,modifiedDate DATE null,chiNhanhId LONG,maCTV VARCHAR(75) null,maKhachHang VARCHAR(75) null,soKU VARCHAR(75) null,createDate DATE null,ngayBatDau DATE null,ngayKetThuc DATE null,loaiPhatVay INTEGER,soLanDaThu INTEGER,ngayDaThuCuoi DATE null,soTienVay DOUBLE,thoiHan INTEGER,laiSuatVay DOUBLE,gocNgay DOUBLE,laiNgay DOUBLE,gocNgayCuoi DOUBLE,soNgayThuTruoc INTEGER,ngayThuTruocTu DATE null,ngayThuTruocDen DATE null,ngayTatToan DATE null,trangThai INTEGER)";

	public static final String TABLE_SQL_DROP = "drop table mb_phatvay";

	public static final String ORDER_BY_JPQL =
		" ORDER BY phatVay.phatVayId ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY mb_phatvay.phatVayId ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(
		com.mb.service.util.ServiceProps.get(
			"value.object.entity.cache.enabled.com.mb.model.PhatVay"),
		true);

	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(
		com.mb.service.util.ServiceProps.get(
			"value.object.finder.cache.enabled.com.mb.model.PhatVay"),
		true);

	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(
		com.mb.service.util.ServiceProps.get(
			"value.object.column.bitmask.enabled.com.mb.model.PhatVay"),
		true);

	public static final long MACTV_COLUMN_BITMASK = 1L;

	public static final long SOKU_COLUMN_BITMASK = 2L;

	public static final long PHATVAYID_COLUMN_BITMASK = 4L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static PhatVay toModel(PhatVaySoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		PhatVay model = new PhatVayImpl();

		model.setPhatVayId(soapModel.getPhatVayId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setGroupId(soapModel.getGroupId());
		model.setUserId(soapModel.getUserId());
		model.setUserName(soapModel.getUserName());
		model.setNgayTao(soapModel.getNgayTao());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setChiNhanhId(soapModel.getChiNhanhId());
		model.setMaCTV(soapModel.getMaCTV());
		model.setMaKhachHang(soapModel.getMaKhachHang());
		model.setSoKU(soapModel.getSoKU());
		model.setCreateDate(soapModel.getCreateDate());
		model.setNgayBatDau(soapModel.getNgayBatDau());
		model.setNgayKetThuc(soapModel.getNgayKetThuc());
		model.setLoaiPhatVay(soapModel.getLoaiPhatVay());
		model.setSoLanDaThu(soapModel.getSoLanDaThu());
		model.setNgayDaThuCuoi(soapModel.getNgayDaThuCuoi());
		model.setSoTienVay(soapModel.getSoTienVay());
		model.setThoiHan(soapModel.getThoiHan());
		model.setLaiSuatVay(soapModel.getLaiSuatVay());
		model.setGocNgay(soapModel.getGocNgay());
		model.setLaiNgay(soapModel.getLaiNgay());
		model.setGocNgayCuoi(soapModel.getGocNgayCuoi());
		model.setSoNgayThuTruoc(soapModel.getSoNgayThuTruoc());
		model.setNgayThuTruocTu(soapModel.getNgayThuTruocTu());
		model.setNgayThuTruocDen(soapModel.getNgayThuTruocDen());
		model.setNgayTatToan(soapModel.getNgayTatToan());
		model.setTrangThai(soapModel.getTrangThai());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<PhatVay> toModels(PhatVaySoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<PhatVay> models = new ArrayList<PhatVay>(soapModels.length);

		for (PhatVaySoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(
		com.mb.service.util.ServiceProps.get(
			"lock.expiration.time.com.mb.model.PhatVay"));

	public PhatVayModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _phatVayId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setPhatVayId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _phatVayId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return PhatVay.class;
	}

	@Override
	public String getModelClassName() {
		return PhatVay.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<PhatVay, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		for (Map.Entry<String, Function<PhatVay, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<PhatVay, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName, attributeGetterFunction.apply((PhatVay)this));
		}

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<PhatVay, Object>> attributeSetterBiConsumers =
			getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<PhatVay, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(PhatVay)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<PhatVay, Object>>
		getAttributeGetterFunctions() {

		return _attributeGetterFunctions;
	}

	public Map<String, BiConsumer<PhatVay, Object>>
		getAttributeSetterBiConsumers() {

		return _attributeSetterBiConsumers;
	}

	private static final Map<String, Function<PhatVay, Object>>
		_attributeGetterFunctions;
	private static final Map<String, BiConsumer<PhatVay, Object>>
		_attributeSetterBiConsumers;

	static {
		Map<String, Function<PhatVay, Object>> attributeGetterFunctions =
			new LinkedHashMap<String, Function<PhatVay, Object>>();
		Map<String, BiConsumer<PhatVay, ?>> attributeSetterBiConsumers =
			new LinkedHashMap<String, BiConsumer<PhatVay, ?>>();

		attributeGetterFunctions.put(
			"phatVayId",
			new Function<PhatVay, Object>() {

				@Override
				public Object apply(PhatVay phatVay) {
					return phatVay.getPhatVayId();
				}

			});
		attributeSetterBiConsumers.put(
			"phatVayId",
			new BiConsumer<PhatVay, Object>() {

				@Override
				public void accept(PhatVay phatVay, Object phatVayId) {
					phatVay.setPhatVayId((Long)phatVayId);
				}

			});
		attributeGetterFunctions.put(
			"companyId",
			new Function<PhatVay, Object>() {

				@Override
				public Object apply(PhatVay phatVay) {
					return phatVay.getCompanyId();
				}

			});
		attributeSetterBiConsumers.put(
			"companyId",
			new BiConsumer<PhatVay, Object>() {

				@Override
				public void accept(PhatVay phatVay, Object companyId) {
					phatVay.setCompanyId((Long)companyId);
				}

			});
		attributeGetterFunctions.put(
			"groupId",
			new Function<PhatVay, Object>() {

				@Override
				public Object apply(PhatVay phatVay) {
					return phatVay.getGroupId();
				}

			});
		attributeSetterBiConsumers.put(
			"groupId",
			new BiConsumer<PhatVay, Object>() {

				@Override
				public void accept(PhatVay phatVay, Object groupId) {
					phatVay.setGroupId((Long)groupId);
				}

			});
		attributeGetterFunctions.put(
			"userId",
			new Function<PhatVay, Object>() {

				@Override
				public Object apply(PhatVay phatVay) {
					return phatVay.getUserId();
				}

			});
		attributeSetterBiConsumers.put(
			"userId",
			new BiConsumer<PhatVay, Object>() {

				@Override
				public void accept(PhatVay phatVay, Object userId) {
					phatVay.setUserId((Long)userId);
				}

			});
		attributeGetterFunctions.put(
			"userName",
			new Function<PhatVay, Object>() {

				@Override
				public Object apply(PhatVay phatVay) {
					return phatVay.getUserName();
				}

			});
		attributeSetterBiConsumers.put(
			"userName",
			new BiConsumer<PhatVay, Object>() {

				@Override
				public void accept(PhatVay phatVay, Object userName) {
					phatVay.setUserName((String)userName);
				}

			});
		attributeGetterFunctions.put(
			"ngayTao",
			new Function<PhatVay, Object>() {

				@Override
				public Object apply(PhatVay phatVay) {
					return phatVay.getNgayTao();
				}

			});
		attributeSetterBiConsumers.put(
			"ngayTao",
			new BiConsumer<PhatVay, Object>() {

				@Override
				public void accept(PhatVay phatVay, Object ngayTao) {
					phatVay.setNgayTao((Date)ngayTao);
				}

			});
		attributeGetterFunctions.put(
			"modifiedDate",
			new Function<PhatVay, Object>() {

				@Override
				public Object apply(PhatVay phatVay) {
					return phatVay.getModifiedDate();
				}

			});
		attributeSetterBiConsumers.put(
			"modifiedDate",
			new BiConsumer<PhatVay, Object>() {

				@Override
				public void accept(PhatVay phatVay, Object modifiedDate) {
					phatVay.setModifiedDate((Date)modifiedDate);
				}

			});
		attributeGetterFunctions.put(
			"chiNhanhId",
			new Function<PhatVay, Object>() {

				@Override
				public Object apply(PhatVay phatVay) {
					return phatVay.getChiNhanhId();
				}

			});
		attributeSetterBiConsumers.put(
			"chiNhanhId",
			new BiConsumer<PhatVay, Object>() {

				@Override
				public void accept(PhatVay phatVay, Object chiNhanhId) {
					phatVay.setChiNhanhId((Long)chiNhanhId);
				}

			});
		attributeGetterFunctions.put(
			"maCTV",
			new Function<PhatVay, Object>() {

				@Override
				public Object apply(PhatVay phatVay) {
					return phatVay.getMaCTV();
				}

			});
		attributeSetterBiConsumers.put(
			"maCTV",
			new BiConsumer<PhatVay, Object>() {

				@Override
				public void accept(PhatVay phatVay, Object maCTV) {
					phatVay.setMaCTV((String)maCTV);
				}

			});
		attributeGetterFunctions.put(
			"maKhachHang",
			new Function<PhatVay, Object>() {

				@Override
				public Object apply(PhatVay phatVay) {
					return phatVay.getMaKhachHang();
				}

			});
		attributeSetterBiConsumers.put(
			"maKhachHang",
			new BiConsumer<PhatVay, Object>() {

				@Override
				public void accept(PhatVay phatVay, Object maKhachHang) {
					phatVay.setMaKhachHang((String)maKhachHang);
				}

			});
		attributeGetterFunctions.put(
			"soKU",
			new Function<PhatVay, Object>() {

				@Override
				public Object apply(PhatVay phatVay) {
					return phatVay.getSoKU();
				}

			});
		attributeSetterBiConsumers.put(
			"soKU",
			new BiConsumer<PhatVay, Object>() {

				@Override
				public void accept(PhatVay phatVay, Object soKU) {
					phatVay.setSoKU((String)soKU);
				}

			});
		attributeGetterFunctions.put(
			"createDate",
			new Function<PhatVay, Object>() {

				@Override
				public Object apply(PhatVay phatVay) {
					return phatVay.getCreateDate();
				}

			});
		attributeSetterBiConsumers.put(
			"createDate",
			new BiConsumer<PhatVay, Object>() {

				@Override
				public void accept(PhatVay phatVay, Object createDate) {
					phatVay.setCreateDate((Date)createDate);
				}

			});
		attributeGetterFunctions.put(
			"ngayBatDau",
			new Function<PhatVay, Object>() {

				@Override
				public Object apply(PhatVay phatVay) {
					return phatVay.getNgayBatDau();
				}

			});
		attributeSetterBiConsumers.put(
			"ngayBatDau",
			new BiConsumer<PhatVay, Object>() {

				@Override
				public void accept(PhatVay phatVay, Object ngayBatDau) {
					phatVay.setNgayBatDau((Date)ngayBatDau);
				}

			});
		attributeGetterFunctions.put(
			"ngayKetThuc",
			new Function<PhatVay, Object>() {

				@Override
				public Object apply(PhatVay phatVay) {
					return phatVay.getNgayKetThuc();
				}

			});
		attributeSetterBiConsumers.put(
			"ngayKetThuc",
			new BiConsumer<PhatVay, Object>() {

				@Override
				public void accept(PhatVay phatVay, Object ngayKetThuc) {
					phatVay.setNgayKetThuc((Date)ngayKetThuc);
				}

			});
		attributeGetterFunctions.put(
			"loaiPhatVay",
			new Function<PhatVay, Object>() {

				@Override
				public Object apply(PhatVay phatVay) {
					return phatVay.getLoaiPhatVay();
				}

			});
		attributeSetterBiConsumers.put(
			"loaiPhatVay",
			new BiConsumer<PhatVay, Object>() {

				@Override
				public void accept(PhatVay phatVay, Object loaiPhatVay) {
					phatVay.setLoaiPhatVay((Integer)loaiPhatVay);
				}

			});
		attributeGetterFunctions.put(
			"soLanDaThu",
			new Function<PhatVay, Object>() {

				@Override
				public Object apply(PhatVay phatVay) {
					return phatVay.getSoLanDaThu();
				}

			});
		attributeSetterBiConsumers.put(
			"soLanDaThu",
			new BiConsumer<PhatVay, Object>() {

				@Override
				public void accept(PhatVay phatVay, Object soLanDaThu) {
					phatVay.setSoLanDaThu((Integer)soLanDaThu);
				}

			});
		attributeGetterFunctions.put(
			"ngayDaThuCuoi",
			new Function<PhatVay, Object>() {

				@Override
				public Object apply(PhatVay phatVay) {
					return phatVay.getNgayDaThuCuoi();
				}

			});
		attributeSetterBiConsumers.put(
			"ngayDaThuCuoi",
			new BiConsumer<PhatVay, Object>() {

				@Override
				public void accept(PhatVay phatVay, Object ngayDaThuCuoi) {
					phatVay.setNgayDaThuCuoi((Date)ngayDaThuCuoi);
				}

			});
		attributeGetterFunctions.put(
			"soTienVay",
			new Function<PhatVay, Object>() {

				@Override
				public Object apply(PhatVay phatVay) {
					return phatVay.getSoTienVay();
				}

			});
		attributeSetterBiConsumers.put(
			"soTienVay",
			new BiConsumer<PhatVay, Object>() {

				@Override
				public void accept(PhatVay phatVay, Object soTienVay) {
					phatVay.setSoTienVay((Double)soTienVay);
				}

			});
		attributeGetterFunctions.put(
			"thoiHan",
			new Function<PhatVay, Object>() {

				@Override
				public Object apply(PhatVay phatVay) {
					return phatVay.getThoiHan();
				}

			});
		attributeSetterBiConsumers.put(
			"thoiHan",
			new BiConsumer<PhatVay, Object>() {

				@Override
				public void accept(PhatVay phatVay, Object thoiHan) {
					phatVay.setThoiHan((Integer)thoiHan);
				}

			});
		attributeGetterFunctions.put(
			"laiSuatVay",
			new Function<PhatVay, Object>() {

				@Override
				public Object apply(PhatVay phatVay) {
					return phatVay.getLaiSuatVay();
				}

			});
		attributeSetterBiConsumers.put(
			"laiSuatVay",
			new BiConsumer<PhatVay, Object>() {

				@Override
				public void accept(PhatVay phatVay, Object laiSuatVay) {
					phatVay.setLaiSuatVay((Double)laiSuatVay);
				}

			});
		attributeGetterFunctions.put(
			"gocNgay",
			new Function<PhatVay, Object>() {

				@Override
				public Object apply(PhatVay phatVay) {
					return phatVay.getGocNgay();
				}

			});
		attributeSetterBiConsumers.put(
			"gocNgay",
			new BiConsumer<PhatVay, Object>() {

				@Override
				public void accept(PhatVay phatVay, Object gocNgay) {
					phatVay.setGocNgay((Double)gocNgay);
				}

			});
		attributeGetterFunctions.put(
			"laiNgay",
			new Function<PhatVay, Object>() {

				@Override
				public Object apply(PhatVay phatVay) {
					return phatVay.getLaiNgay();
				}

			});
		attributeSetterBiConsumers.put(
			"laiNgay",
			new BiConsumer<PhatVay, Object>() {

				@Override
				public void accept(PhatVay phatVay, Object laiNgay) {
					phatVay.setLaiNgay((Double)laiNgay);
				}

			});
		attributeGetterFunctions.put(
			"gocNgayCuoi",
			new Function<PhatVay, Object>() {

				@Override
				public Object apply(PhatVay phatVay) {
					return phatVay.getGocNgayCuoi();
				}

			});
		attributeSetterBiConsumers.put(
			"gocNgayCuoi",
			new BiConsumer<PhatVay, Object>() {

				@Override
				public void accept(PhatVay phatVay, Object gocNgayCuoi) {
					phatVay.setGocNgayCuoi((Double)gocNgayCuoi);
				}

			});
		attributeGetterFunctions.put(
			"soNgayThuTruoc",
			new Function<PhatVay, Object>() {

				@Override
				public Object apply(PhatVay phatVay) {
					return phatVay.getSoNgayThuTruoc();
				}

			});
		attributeSetterBiConsumers.put(
			"soNgayThuTruoc",
			new BiConsumer<PhatVay, Object>() {

				@Override
				public void accept(PhatVay phatVay, Object soNgayThuTruoc) {
					phatVay.setSoNgayThuTruoc((Integer)soNgayThuTruoc);
				}

			});
		attributeGetterFunctions.put(
			"ngayThuTruocTu",
			new Function<PhatVay, Object>() {

				@Override
				public Object apply(PhatVay phatVay) {
					return phatVay.getNgayThuTruocTu();
				}

			});
		attributeSetterBiConsumers.put(
			"ngayThuTruocTu",
			new BiConsumer<PhatVay, Object>() {

				@Override
				public void accept(PhatVay phatVay, Object ngayThuTruocTu) {
					phatVay.setNgayThuTruocTu((Date)ngayThuTruocTu);
				}

			});
		attributeGetterFunctions.put(
			"ngayThuTruocDen",
			new Function<PhatVay, Object>() {

				@Override
				public Object apply(PhatVay phatVay) {
					return phatVay.getNgayThuTruocDen();
				}

			});
		attributeSetterBiConsumers.put(
			"ngayThuTruocDen",
			new BiConsumer<PhatVay, Object>() {

				@Override
				public void accept(PhatVay phatVay, Object ngayThuTruocDen) {
					phatVay.setNgayThuTruocDen((Date)ngayThuTruocDen);
				}

			});
		attributeGetterFunctions.put(
			"ngayTatToan",
			new Function<PhatVay, Object>() {

				@Override
				public Object apply(PhatVay phatVay) {
					return phatVay.getNgayTatToan();
				}

			});
		attributeSetterBiConsumers.put(
			"ngayTatToan",
			new BiConsumer<PhatVay, Object>() {

				@Override
				public void accept(PhatVay phatVay, Object ngayTatToan) {
					phatVay.setNgayTatToan((Date)ngayTatToan);
				}

			});
		attributeGetterFunctions.put(
			"trangThai",
			new Function<PhatVay, Object>() {

				@Override
				public Object apply(PhatVay phatVay) {
					return phatVay.getTrangThai();
				}

			});
		attributeSetterBiConsumers.put(
			"trangThai",
			new BiConsumer<PhatVay, Object>() {

				@Override
				public void accept(PhatVay phatVay, Object trangThai) {
					phatVay.setTrangThai((Integer)trangThai);
				}

			});

		_attributeGetterFunctions = Collections.unmodifiableMap(
			attributeGetterFunctions);
		_attributeSetterBiConsumers = Collections.unmodifiableMap(
			(Map)attributeSetterBiConsumers);
	}

	@JSON
	@Override
	public long getPhatVayId() {
		return _phatVayId;
	}

	@Override
	public void setPhatVayId(long phatVayId) {
		_columnBitmask = -1L;

		_phatVayId = phatVayId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException pe) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@JSON
	@Override
	public Date getNgayTao() {
		return _ngayTao;
	}

	@Override
	public void setNgayTao(Date ngayTao) {
		_ngayTao = ngayTao;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public long getChiNhanhId() {
		return _chiNhanhId;
	}

	@Override
	public void setChiNhanhId(long chiNhanhId) {
		_chiNhanhId = chiNhanhId;
	}

	@JSON
	@Override
	public String getMaCTV() {
		if (_maCTV == null) {
			return "";
		}
		else {
			return _maCTV;
		}
	}

	@Override
	public void setMaCTV(String maCTV) {
		_columnBitmask |= MACTV_COLUMN_BITMASK;

		if (_originalMaCTV == null) {
			_originalMaCTV = _maCTV;
		}

		_maCTV = maCTV;
	}

	public String getOriginalMaCTV() {
		return GetterUtil.getString(_originalMaCTV);
	}

	@JSON
	@Override
	public String getMaKhachHang() {
		if (_maKhachHang == null) {
			return "";
		}
		else {
			return _maKhachHang;
		}
	}

	@Override
	public void setMaKhachHang(String maKhachHang) {
		_maKhachHang = maKhachHang;
	}

	@JSON
	@Override
	public String getSoKU() {
		if (_soKU == null) {
			return "";
		}
		else {
			return _soKU;
		}
	}

	@Override
	public void setSoKU(String soKU) {
		_columnBitmask |= SOKU_COLUMN_BITMASK;

		if (_originalSoKU == null) {
			_originalSoKU = _soKU;
		}

		_soKU = soKU;
	}

	public String getOriginalSoKU() {
		return GetterUtil.getString(_originalSoKU);
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getNgayBatDau() {
		return _ngayBatDau;
	}

	@Override
	public void setNgayBatDau(Date ngayBatDau) {
		_ngayBatDau = ngayBatDau;
	}

	@JSON
	@Override
	public Date getNgayKetThuc() {
		return _ngayKetThuc;
	}

	@Override
	public void setNgayKetThuc(Date ngayKetThuc) {
		_ngayKetThuc = ngayKetThuc;
	}

	@JSON
	@Override
	public int getLoaiPhatVay() {
		return _loaiPhatVay;
	}

	@Override
	public void setLoaiPhatVay(int loaiPhatVay) {
		_loaiPhatVay = loaiPhatVay;
	}

	@JSON
	@Override
	public int getSoLanDaThu() {
		return _soLanDaThu;
	}

	@Override
	public void setSoLanDaThu(int soLanDaThu) {
		_soLanDaThu = soLanDaThu;
	}

	@JSON
	@Override
	public Date getNgayDaThuCuoi() {
		return _ngayDaThuCuoi;
	}

	@Override
	public void setNgayDaThuCuoi(Date ngayDaThuCuoi) {
		_ngayDaThuCuoi = ngayDaThuCuoi;
	}

	@JSON
	@Override
	public Double getSoTienVay() {
		return _soTienVay;
	}

	@Override
	public void setSoTienVay(Double soTienVay) {
		_soTienVay = soTienVay;
	}

	@JSON
	@Override
	public int getThoiHan() {
		return _thoiHan;
	}

	@Override
	public void setThoiHan(int thoiHan) {
		_thoiHan = thoiHan;
	}

	@JSON
	@Override
	public Double getLaiSuatVay() {
		return _laiSuatVay;
	}

	@Override
	public void setLaiSuatVay(Double laiSuatVay) {
		_laiSuatVay = laiSuatVay;
	}

	@JSON
	@Override
	public Double getGocNgay() {
		return _gocNgay;
	}

	@Override
	public void setGocNgay(Double gocNgay) {
		_gocNgay = gocNgay;
	}

	@JSON
	@Override
	public Double getLaiNgay() {
		return _laiNgay;
	}

	@Override
	public void setLaiNgay(Double laiNgay) {
		_laiNgay = laiNgay;
	}

	@JSON
	@Override
	public Double getGocNgayCuoi() {
		return _gocNgayCuoi;
	}

	@Override
	public void setGocNgayCuoi(Double gocNgayCuoi) {
		_gocNgayCuoi = gocNgayCuoi;
	}

	@JSON
	@Override
	public int getSoNgayThuTruoc() {
		return _soNgayThuTruoc;
	}

	@Override
	public void setSoNgayThuTruoc(int soNgayThuTruoc) {
		_soNgayThuTruoc = soNgayThuTruoc;
	}

	@JSON
	@Override
	public Date getNgayThuTruocTu() {
		return _ngayThuTruocTu;
	}

	@Override
	public void setNgayThuTruocTu(Date ngayThuTruocTu) {
		_ngayThuTruocTu = ngayThuTruocTu;
	}

	@JSON
	@Override
	public Date getNgayThuTruocDen() {
		return _ngayThuTruocDen;
	}

	@Override
	public void setNgayThuTruocDen(Date ngayThuTruocDen) {
		_ngayThuTruocDen = ngayThuTruocDen;
	}

	@JSON
	@Override
	public Date getNgayTatToan() {
		return _ngayTatToan;
	}

	@Override
	public void setNgayTatToan(Date ngayTatToan) {
		_ngayTatToan = ngayTatToan;
	}

	@JSON
	@Override
	public int getTrangThai() {
		return _trangThai;
	}

	@Override
	public void setTrangThai(int trangThai) {
		_trangThai = trangThai;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), PhatVay.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public PhatVay toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (PhatVay)ProxyUtil.newProxyInstance(
				_classLoader, _escapedModelInterfaces,
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		PhatVayImpl phatVayImpl = new PhatVayImpl();

		phatVayImpl.setPhatVayId(getPhatVayId());
		phatVayImpl.setCompanyId(getCompanyId());
		phatVayImpl.setGroupId(getGroupId());
		phatVayImpl.setUserId(getUserId());
		phatVayImpl.setUserName(getUserName());
		phatVayImpl.setNgayTao(getNgayTao());
		phatVayImpl.setModifiedDate(getModifiedDate());
		phatVayImpl.setChiNhanhId(getChiNhanhId());
		phatVayImpl.setMaCTV(getMaCTV());
		phatVayImpl.setMaKhachHang(getMaKhachHang());
		phatVayImpl.setSoKU(getSoKU());
		phatVayImpl.setCreateDate(getCreateDate());
		phatVayImpl.setNgayBatDau(getNgayBatDau());
		phatVayImpl.setNgayKetThuc(getNgayKetThuc());
		phatVayImpl.setLoaiPhatVay(getLoaiPhatVay());
		phatVayImpl.setSoLanDaThu(getSoLanDaThu());
		phatVayImpl.setNgayDaThuCuoi(getNgayDaThuCuoi());
		phatVayImpl.setSoTienVay(getSoTienVay());
		phatVayImpl.setThoiHan(getThoiHan());
		phatVayImpl.setLaiSuatVay(getLaiSuatVay());
		phatVayImpl.setGocNgay(getGocNgay());
		phatVayImpl.setLaiNgay(getLaiNgay());
		phatVayImpl.setGocNgayCuoi(getGocNgayCuoi());
		phatVayImpl.setSoNgayThuTruoc(getSoNgayThuTruoc());
		phatVayImpl.setNgayThuTruocTu(getNgayThuTruocTu());
		phatVayImpl.setNgayThuTruocDen(getNgayThuTruocDen());
		phatVayImpl.setNgayTatToan(getNgayTatToan());
		phatVayImpl.setTrangThai(getTrangThai());

		phatVayImpl.resetOriginalValues();

		return phatVayImpl;
	}

	@Override
	public int compareTo(PhatVay phatVay) {
		int value = 0;

		if (getPhatVayId() < phatVay.getPhatVayId()) {
			value = -1;
		}
		else if (getPhatVayId() > phatVay.getPhatVayId()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof PhatVay)) {
			return false;
		}

		PhatVay phatVay = (PhatVay)obj;

		long primaryKey = phatVay.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		PhatVayModelImpl phatVayModelImpl = this;

		phatVayModelImpl._setModifiedDate = false;

		phatVayModelImpl._originalMaCTV = phatVayModelImpl._maCTV;

		phatVayModelImpl._originalSoKU = phatVayModelImpl._soKU;

		phatVayModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<PhatVay> toCacheModel() {
		PhatVayCacheModel phatVayCacheModel = new PhatVayCacheModel();

		phatVayCacheModel.phatVayId = getPhatVayId();

		phatVayCacheModel.companyId = getCompanyId();

		phatVayCacheModel.groupId = getGroupId();

		phatVayCacheModel.userId = getUserId();

		phatVayCacheModel.userName = getUserName();

		String userName = phatVayCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			phatVayCacheModel.userName = null;
		}

		Date ngayTao = getNgayTao();

		if (ngayTao != null) {
			phatVayCacheModel.ngayTao = ngayTao.getTime();
		}
		else {
			phatVayCacheModel.ngayTao = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			phatVayCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			phatVayCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		phatVayCacheModel.chiNhanhId = getChiNhanhId();

		phatVayCacheModel.maCTV = getMaCTV();

		String maCTV = phatVayCacheModel.maCTV;

		if ((maCTV != null) && (maCTV.length() == 0)) {
			phatVayCacheModel.maCTV = null;
		}

		phatVayCacheModel.maKhachHang = getMaKhachHang();

		String maKhachHang = phatVayCacheModel.maKhachHang;

		if ((maKhachHang != null) && (maKhachHang.length() == 0)) {
			phatVayCacheModel.maKhachHang = null;
		}

		phatVayCacheModel.soKU = getSoKU();

		String soKU = phatVayCacheModel.soKU;

		if ((soKU != null) && (soKU.length() == 0)) {
			phatVayCacheModel.soKU = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			phatVayCacheModel.createDate = createDate.getTime();
		}
		else {
			phatVayCacheModel.createDate = Long.MIN_VALUE;
		}

		Date ngayBatDau = getNgayBatDau();

		if (ngayBatDau != null) {
			phatVayCacheModel.ngayBatDau = ngayBatDau.getTime();
		}
		else {
			phatVayCacheModel.ngayBatDau = Long.MIN_VALUE;
		}

		Date ngayKetThuc = getNgayKetThuc();

		if (ngayKetThuc != null) {
			phatVayCacheModel.ngayKetThuc = ngayKetThuc.getTime();
		}
		else {
			phatVayCacheModel.ngayKetThuc = Long.MIN_VALUE;
		}

		phatVayCacheModel.loaiPhatVay = getLoaiPhatVay();

		phatVayCacheModel.soLanDaThu = getSoLanDaThu();

		Date ngayDaThuCuoi = getNgayDaThuCuoi();

		if (ngayDaThuCuoi != null) {
			phatVayCacheModel.ngayDaThuCuoi = ngayDaThuCuoi.getTime();
		}
		else {
			phatVayCacheModel.ngayDaThuCuoi = Long.MIN_VALUE;
		}

		phatVayCacheModel.soTienVay = getSoTienVay();

		phatVayCacheModel.thoiHan = getThoiHan();

		phatVayCacheModel.laiSuatVay = getLaiSuatVay();

		phatVayCacheModel.gocNgay = getGocNgay();

		phatVayCacheModel.laiNgay = getLaiNgay();

		phatVayCacheModel.gocNgayCuoi = getGocNgayCuoi();

		phatVayCacheModel.soNgayThuTruoc = getSoNgayThuTruoc();

		Date ngayThuTruocTu = getNgayThuTruocTu();

		if (ngayThuTruocTu != null) {
			phatVayCacheModel.ngayThuTruocTu = ngayThuTruocTu.getTime();
		}
		else {
			phatVayCacheModel.ngayThuTruocTu = Long.MIN_VALUE;
		}

		Date ngayThuTruocDen = getNgayThuTruocDen();

		if (ngayThuTruocDen != null) {
			phatVayCacheModel.ngayThuTruocDen = ngayThuTruocDen.getTime();
		}
		else {
			phatVayCacheModel.ngayThuTruocDen = Long.MIN_VALUE;
		}

		Date ngayTatToan = getNgayTatToan();

		if (ngayTatToan != null) {
			phatVayCacheModel.ngayTatToan = ngayTatToan.getTime();
		}
		else {
			phatVayCacheModel.ngayTatToan = Long.MIN_VALUE;
		}

		phatVayCacheModel.trangThai = getTrangThai();

		return phatVayCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<PhatVay, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			4 * attributeGetterFunctions.size() + 2);

		sb.append("{");

		for (Map.Entry<String, Function<PhatVay, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<PhatVay, Object> attributeGetterFunction =
				entry.getValue();

			sb.append(attributeName);
			sb.append("=");
			sb.append(attributeGetterFunction.apply((PhatVay)this));
			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		Map<String, Function<PhatVay, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			5 * attributeGetterFunctions.size() + 4);

		sb.append("<model><model-name>");
		sb.append(getModelClassName());
		sb.append("</model-name>");

		for (Map.Entry<String, Function<PhatVay, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<PhatVay, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("<column><column-name>");
			sb.append(attributeName);
			sb.append("</column-name><column-value><![CDATA[");
			sb.append(attributeGetterFunction.apply((PhatVay)this));
			sb.append("]]></column-value></column>");
		}

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader =
		PhatVay.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
		PhatVay.class, ModelWrapper.class
	};

	private long _phatVayId;
	private long _companyId;
	private long _groupId;
	private long _userId;
	private String _userName;
	private Date _ngayTao;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private long _chiNhanhId;
	private String _maCTV;
	private String _originalMaCTV;
	private String _maKhachHang;
	private String _soKU;
	private String _originalSoKU;
	private Date _createDate;
	private Date _ngayBatDau;
	private Date _ngayKetThuc;
	private int _loaiPhatVay;
	private int _soLanDaThu;
	private Date _ngayDaThuCuoi;
	private Double _soTienVay;
	private int _thoiHan;
	private Double _laiSuatVay;
	private Double _gocNgay;
	private Double _laiNgay;
	private Double _gocNgayCuoi;
	private int _soNgayThuTruoc;
	private Date _ngayThuTruocTu;
	private Date _ngayThuTruocDen;
	private Date _ngayTatToan;
	private int _trangThai;
	private long _columnBitmask;
	private PhatVay _escapedModel;

}